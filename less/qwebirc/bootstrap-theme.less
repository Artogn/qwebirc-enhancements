/*** old bootstrap btn:default *****/
@send-grey: #474949;
@send-grey-back: darken(@send-grey, 20%);

.send {
  .button-variant(grey; @send-grey; @send-grey-back);
  padding: 2px 10px;
}
// .send:hover,
// .send:focus,
// .send:active,
// .send.active {
//   background-color: #3a3c3c;
//   border-color: #2e2f2f;
// }

.qwebirc {

    /*http://www.helloerik.com/column-examples/example4.html*/
    //Probably shouldnt do this as its included in 3.1 with different padding
    .container-fluid {
        padding: 0;
        // margin: 0 auto;
    }

    // Loop over each grid item and generate the css to remove padding
    //http://stackoverflow.com/questions/15239785/how-to-generate-css-with-loop-in-less
    // .remove-padding(@class) {
    //     .col (@index) when (@index =< @grid-columns) {
    //         @item: ".col-@{class}-@{index}";

    //         @{item} {
    //             padding: 5px;
    //         }

    //         // next iteration
    //         .col((@index + 1));
    //     }
    //     .col(1);
    // }

    // // "call" the remove-padding the first time with highest value
    // .remove-padding (xs);
    // .remove-padding (sm);

    .make-grid-columns() {
        @grid-gutter-width: 0;
        // Common styles for all sizes of grid columns, widths 1-12
        .col(@index) when (@index = 1) { // initial
            @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}, .col-xl-@{index}";
            .col((@index + 1), @item);
        }
        .col(@index, @list) when (@index =< @grid-columns) { // general; "=<" isn't a typo
            @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}, .col-xl-@{index}";
            .col((@index + 1), ~"@{list}, @{item}");
        }
        .col(@index, @list) when (@index > @grid-columns) { // terminal
            @{list} {
                position: relative;
                // Prevent columns from collapsing when empty
                min-height: 1px;
                // Inner gutter via padding
                padding-left:  (@grid-gutter-width / 2);
                padding-right: (@grid-gutter-width / 2);
            }
        }
        .col(1); // kickstart it
    }

    .make-grid-columns();


    @screen-xl-min: 1500px;

    @media (min-width: @screen-xl-min) {
        .make-grid(xl);
    }

}